server {
    listen       80;
    server_name  _;

    # For proxy MinIO requests
    ignore_invalid_headers off;
    client_max_body_size 1048576m;
    proxy_buffering off;

    location /xtreme1_relay.html {
        alias /usr/share/nginx/html/xtreme1_relay.html;
        default_type text/html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header Pragma "no-cache";
        expires 0;
    }

    # Efficiency monitoring service - with CORS support
    location /efficiency/ {
        # Handle preflight OPTIONS requests first
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Tool-Type, X-User-Id, X-Project-Id, X-Task-Id' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain; charset=utf-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }

        # CORS headers for actual requests
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, X-Tool-Type, X-User-Id, X-Project-Id, X-Task-Id' always;

        # Proxy settings
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove /efficiency prefix and proxy to efficiency service
        rewrite ^/efficiency/(.*) /$1 break;
        # proxy_pass http://host.docker.internal:8001; # 仅Windows可用
        proxy_pass http://172.17.0.1:8001;
        
        # Handle proxy errors
        proxy_intercept_errors on;
        error_page 502 503 504 = @efficiency_fallback;
    }

    # Fallback for efficiency service errors
    location @efficiency_fallback {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Content-Type' 'application/json' always;
        return 503 '{"success": false, "error": "Efficiency service unavailable", "timestamp": $msec}';
    }

    # Main application - production mode
    location / {
        set $no_cache 0;
        if ($uri ~* ^/$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/main/;
    }

    # Image tool - production mode
    location /tool/image {
        set $no_cache 0;
        if ($uri ~* ^/tool/image[/]?$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/image-tool/;
    }

    # PC tool - production mode  
    location /tool/pc {
        set $no_cache 0;
        if ($uri ~* ^/tool/pc[/]?$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/pc-tool/;
    }

    # Text tool - production mode
    location /tool/text {
        set $no_cache 0;
        if ($uri ~* ^/tool/text[/]?$) {
            set $no_cache 1;
        }
        if ($uri ~* \.(?:html|json)$) {
            set $no_cache 1;
        }
        if ($no_cache = 1) {
            add_header Cache-Control "no-store,no-cache";
            add_header Pragma "no-cache";
        }

        proxy_pass   http://frontend:80/text-tool/;
    }

    # API - backend
    location /api/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        rewrite ^/api/(.*) /$1 break;
        proxy_pass   http://backend:8080;
    }

    # MinIO storage
    location /minio/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        chunked_transfer_encoding off;

        rewrite ^/minio/(.*) /$1 break;
        proxy_pass http://minio:9000;
    }
} 